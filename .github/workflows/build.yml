
on:
  push:

jobs:
  get-version:
    uses: shiipou/github-actions/.github/workflows/get-version.yml@main
    with:
      release-branches: '^(main)$'

  test:
    name: Spring test
    runs-on: ubuntu-latest
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_DB: forknow
          POSTGRES_USER: forknow
          POSTGRES_PASSWORD: forknow
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
    steps:
      - name: setup java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build with Gradle
        run: ./gradlew test
  
  build:
    name: Spring build
    runs-on: ubuntu-latest
    if: ${{ needs.get-version.outputs.will-release == 'true' }}
    needs: 
      - get-version
    steps:
      # - name: Print version
      #   run : |
      #     echo "${{ needs.get-version.outputs.version }}"
      #     echo "${{ needs.get-version.outputs.changelogs }}"
      #     echo "${{ needs.get-version.outputs.is-prerelease }}"
      #     echo "${{ needs.get-version.outputs.will-release }}"
      - name: setup java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build with Gradle
        env:
          VERSION: "${{ needs.get-version.outputs.version }}"
        run: ./gradlew bootjar
      - uses: actions/upload-artifact@v4
        with:
          path: build/libs/
